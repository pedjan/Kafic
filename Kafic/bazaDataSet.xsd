<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bazaDataSet" targetNamespace="http://tempuri.org/bazaDataSet.xsd" xmlns:mstns="http://tempuri.org/bazaDataSet.xsd" xmlns="http://tempuri.org/bazaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bazaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bazaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Kafic.Properties.Settings.GlobalReference.Default.bazaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vrstaTableAdapter" GeneratorDataComponentClassName="vrstaTableAdapter" Name="vrsta" UserDataComponentName="vrstaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bazaConnectionString (Settings)" DbObjectName="baza.dbo.vrsta" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[vrsta] WHERE (([idV] = @Original_idV) AND ([ime] = @Original_ime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[vrsta] ([ime]) VALUES (@ime);
SELECT idV, ime FROM vrsta WHERE (idV = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idV, ime FROM dbo.vrsta</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[vrsta] SET [ime] = @ime WHERE (([idV] = @Original_idV) AND ([ime] = @Original_ime));
SELECT idV, ime FROM vrsta WHERE (idV = @idV)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idV" ColumnName="idV" DataSourceName="baza.dbo.vrsta" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idV" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idV" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idV" DataSetColumn="idV" />
              <Mapping SourceColumn="ime" DataSetColumn="ime" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="bazaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="bazaDataSet" msprop:Generator_DataSetName="bazaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="vrsta" msprop:Generator_RowEvHandlerName="vrstaRowChangeEventHandler" msprop:Generator_RowDeletedName="vrstaRowDeleted" msprop:Generator_RowDeletingName="vrstaRowDeleting" msprop:Generator_RowEvArgName="vrstaRowChangeEvent" msprop:Generator_TablePropName="vrsta" msprop:Generator_RowChangedName="vrstaRowChanged" msprop:Generator_RowChangingName="vrstaRowChanging" msprop:Generator_TableClassName="vrstaDataTable" msprop:Generator_RowClassName="vrstaRow" msprop:Generator_TableVarName="tablevrsta" msprop:Generator_UserTableName="vrsta">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idV" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="idV" msprop:Generator_ColumnPropNameInTable="idVColumn" msprop:Generator_ColumnVarNameInTable="columnidV" msprop:Generator_UserColumnName="idV" type="xs:int" />
              <xs:element name="ime" msprop:Generator_ColumnPropNameInRow="ime" msprop:Generator_ColumnPropNameInTable="imeColumn" msprop:Generator_ColumnVarNameInTable="columnime" msprop:Generator_UserColumnName="ime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:vrsta" />
      <xs:field xpath="mstns:idV" />
    </xs:unique>
  </xs:element>
</xs:schema>